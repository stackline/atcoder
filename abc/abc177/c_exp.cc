#include <bits/stdc++.h>
using namespace std;
using ll = long long;

// 差分を用いて区間和を計算する
int main() {
  int n;
  cin >> n;

  vector<int> a(n);
  int mod = 1000000007;
  ll sum = 0;
  for (int i = 0; i < n; i++) {
    cin >> a.at(i);
    sum += a.at(i);
    sum = sum % mod;
  }

  ll ans = 0;

  // ### a[i] * a[j] の和
  //
  // i が固定 かつ 0-indexed の場合
  //   a[i] * a[i+1] + a[i] * a[i+2] + ... + a[i] * a[n-1]
  //   = a[i] * (a[i+1] + a[i+2] + ... + a[n-1])
  //
  // i について全探索する
  //
  for (int i = 0; i < n; i++) {
    // ### i=0 の場合
    //
    // sum = a[0] + a[1] + ... + a[n-1] である
    // sum - a[0] より sum は以下となる
    //
    //   sum = a[1] + ... + a[n-1]
    //
    // ans = ans + a[0] * sum から ans は以下となる
    //
    //   ans = 0 + a[0] * (a[1] + ... + a[n-1])
    //
    // ans = ans % mod より、i=0 の時の剰余の値を算出する
    // 剰余のため ans < mod となる
    //
    // ### i=1 の場合
    //
    // sum = a[1] + a[2] + ... + a[n-1] である
    // sum - a[1] より sum は以下となる
    //
    //   sum = a[2] + ... + a[n-1]
    //
    // ans = ans + a[1] * sum から ans は以下となる
    //
    //   ans = (i=0の時の剰余) + a[1] * (a[2] + ... + a[n-1])
    //
    // ans = ans % mod より、i=1 の時の剰余の値を算出する
    // 剰余のため ans < mod となる
    //
    // ### 具体的な入力例
    //
    // n = 3
    // a = [100, 100, 100]
    // mod = 107
    //
    // sum = 100 + 100 + 100 = 300
    //
    // i=0
    //   sum = 300 - 100 = 200
    //   ans = 0 + (100 * 200) = 20000
    //   ans = 20000 % 107 = 98
    // i=1
    //   sum = 200 - 100 = 100
    //   ans = 98 + (100 * 100) = 10098
    //   ans = 10098 % 107 = 40
    // i=2
    //   sum = 100 - 100 = 0
    //   ans = 40 + (100 * 0) = 40
    //   ans = 40 % 107 = 40
    //
    // Ai x Aj の総和
    //   (100 * 200) + (100 * 100) + (100 * 0) = 30000
    // mod(107)
    //   30000 % 107 = 40
    //
    // 総和に対して剰余を算出することと、
    // 総和の一部分に対して剰余を算出し、剰余をまた別の和に加え、その和から剰余を算出することは、
    // 同じ値を導出する。
    //
    //
    // ### 入力受取時に sum の剰余を予め算出する場合
    //
    // n = 3
    // a = [100, 100, 100]
    // mod = 107
    //
    // sum = 100 + 100 + 100 = 300
    // sum = sum % mod = 300 % 107 = 86
    //
    // i=0
    //   sum = 86 - 100 = -14
    //   sum = -14 + 107 = 93 (= 200 mod(107))
    //
    //   ans = 0 + (100 * 93) = 9300
    //   ans = 9300 % 107 = 98
    // i=1
    //   sum = 93 - 100 = -7
    //   sum = -7 + 107 = 100
    //
    //   ans = 98 + (100 * 100) = 10098
    //   ans = 10098 % 107 = 40
    // i=2
    //   sum = 100 - 100 = 0
    //
    //   ans = 40 + (100 * 0) = 40
    //   ans = 40 % 107 = 40
    //
    // 予め sum の mod(107) を算出することで、桁数の増加を抑える
    // sum がマイナスとなった場合、+107 することで、mod(107) の数に影響がないようにしつつプラスの数とする
    //
    // 例
    //   200 / 107 = 1
    //   200 % 107 = 93
    //   つまり 107 * 1 + 98
    //
    //   (200+107) / 107 = 2
    //   (200+107) % 107 = 93
    //   つまり 107 * 2 + 93
    //
    sum = sum - a.at(i);
    if (sum < 0) { sum += mod; }

    ans = ans + a.at(i) * sum;
    ans = ans % mod;
  }

  cout << ans << endl;
  return 0;
}
