#include <bits/stdc++.h>
using namespace std;
using ll = long long;

// 計算量: O(N + max(B))
int main() {
  cin.tie(nullptr); // Do not flush "cout" when processing "cin".

  int n;
  cin >> n;

  // 記録
  //
  // 要素数に 1e6     を指定すると index は 0 〜   999_999 となる。
  // 要素数に 1e6 + 1 を指定すると index は 0 〜 1_000_000 となる。
  // 要素数に 1e6 + 2 を指定すると index は 0 〜 1_000_001 となる。
  //
  // Bi の制約を確認すると 1 <= Bi <= 10**6 = 1_000_000 である。
  //
  // 例えば Ai = 1, Bi = 1_000_000 の場合、いもす法を用いると、
  // cnt[1]++ で加算開始を記録し、
  // cnt[1_000_001]-- で加算終了を記録する。
  //
  // そのため、vector を要素数 1e6 + 2 で初期化している。
  //
  vector<ll> cnt(1e6 + 2);
  for (int i = 0; i < n; i++) {
    ll a, b;
    cin >> a >> b;
    // a <= x <= b の範囲の数字について、
    // 両端の数字 a,b を含めて加算する。
    cnt.at(a)++;
    cnt.at(b + 1)--;
  }

  // シミュレート
  //
  // ### データ例
  // 1: 1 3
  // 2: 3 5
  //
  // ### シミュレート例
  //                1  2  3  4  5  6
  // -------------------------------
  //  1回目の操作: +1       -1
  //  2回目の操作:       +1       -1
  // -------------------------------
  //         記録: +1  0 +1 -1  0 -1
  // -------------------------------
  // シミュレート: +1 +1 +2 +1 +1  0
  // -------------------------------
  //
  ll ans = 0;
  for (int i = 1; i < 1e6 + 1; i++) {
    cnt.at(i) = cnt.at(i) + cnt.at(i - 1);
    ans += (i * cnt.at(i));
  }

  cout << ans << endl;
  return 0;
}
