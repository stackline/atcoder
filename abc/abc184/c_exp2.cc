#include <bits/stdc++.h>
using namespace std;
using ll = long long;

// ### 2手のバリエーション
//
// * AA --> 1手と同じ
// * AB
// * AC
// * BA --> ABと同じ
// * BB --> 1手と同じ
// * BC
// * CA --> ACと同じ
// * CB --> BCと同じ
// * CC
//
// 考慮不要のものを除くと "AB, AC, BC, CC" の4種類となる。
//
// ### x' y' を以下と仮定する
//
//   * x+y = x'
//   * x-y = y'
//
// 問題文で与えられた条件を x' y' に変換すると以下になる。
//
//   x1+y1 = x2+y2
//     --> x'1 = x'2
//   x1-y1 = x2-y2
//     --> y'1 = y'2
//   |x1-x2| + |y1-y2| <= 3
//     --> max(|x'1-x'2|, |y'1-y'2|) <= 3
//
// max(|x'1-x'2|, |y'1-y'2|) <= 3 について
//
//   (x'1-x'2) が取りうる値は -3 <= (x'1-x'2) <= +3 である。
//     例: スタート地点 (3, 3) から x 軸方向 (6, 3) 、
//         または y 軸方向 (3, 6) に移動すると、x' は 3+(-6) = -3 となる。
//     例: スタート地点 (3, 3) から x 軸方向 (0, 3) 、
//         または y 軸方向 (3, 0) に移動すると x' は 3+(-0) = +3 となる。
//
//   (y'1-y'2) が取りうる値は -3 <= (y'1-y'2) <= +3 である。
//     例: スタート地点 (3, 3) から x 軸方向 (6, 3) 、
//         または y 軸方向 (3, 0) に移動すると、y' は 0-(+3) = -3 となる。
//     例: スタート地点 (3, 3) から x 軸方向 (0, 3) 、
//         または y 軸方向 (3, 6) に移動すると y' は 0-(-3) = +3 となる。
//
// ### AB
// (x1+y1) % 2 == (x2+y2) % 2
// スタート地点とゴール地点のパリティが同じ。
//
// ### AC
// (x', y') 座標で見る。
//
// (x'1, y'1)
//  |
//  | A の移動
//  |   (x',y') で見ると x'1 から x'2 への移動である。
//  |   x 軸のみ移動し、y 軸は移動しない。
//  |
// (x'2, y'1)
//  |
//  | C の移動
//  |   (x',y') で見ると x 軸の移動は、A の移動で必要な分だけ移動できる。
//  |   C の移動は y 軸の移動のみ検討すればよい。
//  |   (x',y') について x 軸に移動しない、かつ max(|x'1-x'2|, |y'1-y'2|) <= 3 より
//  |   |y'1-y'2| <= 3 を満たす場合、AC の2手で移動可能な座標である。
//  |
// (x'2, y'2)
//
// ### BC
//
// (x'1, y'1)
//  |
//  | B の移動
//  |   y 軸のみ移動し、x 軸は移動しない。
//  |
// (x'1, y'2)
//  |
//  | C の移動
//  |   C の移動は x 軸の移動のみ検討すればよい。
//  |   |x'1-x'2| <= 3 を満たす場合、BC の2手で移動可能な座標である。
//  |
// (x'2, y'2)
//
// ### CC
// max(|x'1-x'2|, |y'1-y'2|) <= 6
//
int solve() {
  int x1, y1, x2, y2;
  cin >> x1 >> y1 >> x2 >> y2;

  // 0手の判定
  if (x1 == x2 && y1 == y2) {
    return 0;
  }

  // 1手の判定
  // 左上から右下への斜めの移動
  if (x1 + y1 == x2 + y2) {
    return 1;
  }
  // 左下から右上への斜めの移動
  if (x1 - y1 == x2 - y2) {
    return 1;
  }
  // スタート地点からのマンハッタン距離が3マス以内
  if (abs(x1 - x2) + abs(y1 - y2) <= 3) {
    return 1;
  }

  // 2手の判定
  // AB
  if ((x1 + y1) % 2 == (x2 + y2) % 2) {
    return 2;
  }
  // CC
  if (abs(x1 - x2) + abs(y1 - y2) <= 6) {
    return 2;
  }
  // AC
  // |y'1-y'2| <= 3 を満たす
  if (abs((x1 - y1) - (x2 - y2)) <= 3) {
    return 2;
  }
  // BC
  // |x'1-x'2| <= 3 を満たす
  if (abs((x1 + y1) - (x2 + y2)) <= 3) {
    return 2;
  }

  // 残りは3手
  return 3;
}

int main() {
  cin.tie(nullptr); // Do not flush "cout" when processing "cin".
  cout << solve() << endl;
  return 0;
}
