#include <bits/stdc++.h>
using namespace std;
using ll = long long;

int main() {
  cin.tie(nullptr); // Do not flush "cout" when processing "cin".

  ll n;
  cin >> n;

  // ### 値追加の計算量
  //
  // * unordered_set
  //   * 平均O(1)
  // * set
  //   * O(logN)
  //
  unordered_set<ll> s;

  // 取りうる値の範囲
  //
  //   * n <= 10**10
  //   * a >= 2
  //   * b >= 2
  //
  // a,b の取りうる範囲
  //
  //   * a = 2 の時
  //     * 2**33 < 10**10 < 2**34
  //     * b < 34 である。
  //   * b = 2 の時
  //     * n = 10**10 = (10**5)**2
  //     * sqrt(n) = sqrt((10**5)**2) = 10**5
  //     * a = 100_000 である。
  //
  // これらより a,b の取りうる範囲は以下である。
  //
  //   * 2 <= a <= 100_000
  //   * 2 <= b < 34
  //
  // 全探索する (a,b) の整数の組は、最大でも 100_000 * 33 = 330万件以下である。
  //
  // ### 解説メモ
  //
  // x = 2 〜 floor(log2(n))
  //
  //   n = 10**10 の場合、floor(log2(10**10) = 33 である。
  //
  //     低 2、真数 10**10 の対数を求める。
  //       log2(n) = log2(10**10) = 33.219280948873624
  //     floor で小数を取り除き 33 となる。
  //     これは低 a が最小の時 (a = 2 の時) に取りうる、指数 b の最大値である。
  //
  // floor(nのx乗根) - 1
  //
  //   n = 8 の時
  //     floor(log2(8)) = 3
  //     x = 2 〜 3
  //       x = 2 の時
  //         floor(8の2乗根) - 1
  //         = floor(sqrt(8)) - 1
  //         = floor(2.8284271247461903) - 1
  //         = 2 - 1
  //         = 1
  //       x = 3 の時
  //         floor(8の2乗根) - 1
  //         = floor(cbrt(8)) - 1
  //         = floor(2.0) - 1
  //         = 2 - 1
  //         = 1
  //
  //   b = 2 の場合
  //     a**2 = 8 より a = sqrt(8) = 2.8284271247461903
  //     b = 2 の時に取りうる a の値の範囲は floor(2.8284271247461903) - 1 = 1
  //       a >= 2 より、a = 1 の時の組み合わせ (a,b) = (1,2) を除いている。
  //     組み合わせは以下の1組。
  //
  //       (a,b) = (2,2)
  //
  //   b = 3 の場合
  //     a**3 = 8 より a = cbrt(8) = 2.0
  //     b = 3 の時に取りうる a の値の範囲は floor(2.0) - 1 = 1
  //       a >= 2 より、a = 1 の時の組み合わせ (a,b) = (1,3) を除いている。
  //     組み合わせは以下の1組。
  //
  //       (a,b) = (2,3)
  //
  // n,b を固定した時に取りうる、a >= 2 の範囲で a**b <= n を満たす整数 a の数を
  // 探索している。
  //
  // (a,b) の組み合わせの数の、大体の最大値
  //
  //   n = 10**10 の場合
  //   a = 2 の時、b = 33 以下である。
  //   a = 2154 の時、b = 3 以下である。
  //   a = 2155 の時、b = 2 以下である。
  //     b = 3 の場合、2155**3 = 10007873875 > 10**10 である。
  //   これより、a の値が 2155 〜 100_000 の場合において、
  //   b の取りうる値は 2 のみである。
  //
  //   a = 2 〜 2154 の時に、それぞれ b を (33 - 1) 通り取れると仮定する。
  //
  //     組み合わせの数 = (2154 - 1) * (33 - 1) + (100_000 - 2154 - 1) * 1
  //                    = 166_741
  //
  //   (a,b) の組み合わせの数は、多くても20万件未満である。
  //
  for (ll a = 2; a * a <= n; a++) {
    // b >= 2 より、a の2乗から探索を開始する
    ll x = a * a;
    // n より大きくなるまで、a の3乗以降の値を探索する。
    while (x <= n) {
      s.insert(x);
      x = x * a;
    }
  }

  cout << (n - s.size()) << endl;
  return 0;
}
